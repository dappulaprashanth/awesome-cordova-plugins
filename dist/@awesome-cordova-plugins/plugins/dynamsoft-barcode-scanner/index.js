var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var BarcodeScannerOriginal = /** @class */ (function (_super) {
    __extends(BarcodeScannerOriginal, _super);
    function BarcodeScannerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BarcodeScannerOriginal.prototype.scan = function (options) { return cordova(this, "scan", { "callbackOrder": "reverse" }, arguments); };
    BarcodeScannerOriginal.pluginName = "dynamsoft-barcode-scanner";
    BarcodeScannerOriginal.plugin = "cordova-plugin-dbr";
    BarcodeScannerOriginal.pluginRef = "cordova.plugins.barcodeScanner";
    BarcodeScannerOriginal.repo = "https://github.com/Dynamsoft/cordova-plugin-dbr";
    BarcodeScannerOriginal.install = "";
    BarcodeScannerOriginal.installVariables = [];
    BarcodeScannerOriginal.platforms = ["Android", "iOS"];
    return BarcodeScannerOriginal;
}(AwesomeCordovaNativePlugin));
var BarcodeScanner = new BarcodeScannerOriginal();
export { BarcodeScanner };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyx1Q0FPTixNQUFNLCtCQUErQixDQUFDOztJQW9HSCxrQ0FBMEI7Ozs7SUFVNUQsNkJBQUksYUFBQyxPQUErQjs7Ozs7Ozs7eUJBdEh0QztFQTRHb0MsMEJBQTBCO1NBQWpELGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBQbHVnaW4sXG4gIENvcmRvdmEsXG4gIENvcmRvdmFQcm9wZXJ0eSxcbiAgQ29yZG92YUluc3RhbmNlLFxuICBJbnN0YW5jZVByb3BlcnR5LFxuICBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbixcbn0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJhcmNvZGVTY2FubmVyT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBQcmVmZXIgZnJvbnQgY2FtZXJhLiBTdXBwb3J0ZWQgb24gaU9TIGFuZCBBbmRyb2lkLlxuICAgKi9cbiAgcHJlZmVyRnJvbnRDYW1lcmE/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBTaG93IGZsaXAgY2FtZXJhIGJ1dHRvbi4gU3VwcG9ydGVkIG9uIGlPUyBhbmQgQW5kcm9pZC5cbiAgICovXG4gIHNob3dGbGlwQ2FtZXJhQnV0dG9uPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogU2hvdyB0b3JjaCBidXR0b24uIFN1cHBvcnRlZCBvbiBpT1MgYW5kIEFuZHJvaWQuXG4gICAqL1xuICBzaG93VG9yY2hCdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBEaXNhYmxlIGFuaW1hdGlvbnMuIFN1cHBvcnRlZCBvbiBpT1Mgb25seS5cbiAgICovXG4gIGRpc2FibGVBbmltYXRpb25zPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogRGlzYWJsZSBzdWNjZXNzIGJlZXAuIFN1cHBvcnRlZCBvbiBpT1Mgb25seS5cbiAgICovXG4gIGRpc2FibGVTdWNjZXNzQmVlcD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFByb21wdCB0ZXh0LiBTdXBwb3J0ZWQgb24gQW5kcm9pZCBvbmx5LlxuICAgKi9cbiAgcHJvbXB0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBGb3JtYXRzIHNlcGFyYXRlZCBieSBjb21tYXMuIERlZmF1bHRzIHRvIGFsbCBmb3JtYXRzIGV4Y2VwdCBgUERGXzQxN2AgYW5kIGBSU1NfRVhQQU5ERURgLlxuICAgKi9cbiAgZm9ybWF0cz86IHN0cmluZztcblxuICAvKipcbiAgICogT3JpZW50YXRpb24uIFN1cHBvcnRlZCBvbiBBbmRyb2lkIG9ubHkuIENhbiBiZSBzZXQgdG8gYHBvcnRyYWl0YCBvciBgbGFuZHNjYXBlYC4gRGVmYXVsdHMgdG8gbm9uZSBzbyB0aGUgdXNlciBjYW4gcm90YXRlIHRoZSBwaG9uZSBhbmQgcGljayBhbiBvcmllbnRhdGlvbi5cbiAgICovXG4gIG9yaWVudGF0aW9uPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBMYXVuY2ggd2l0aCB0aGUgdG9yY2ggc3dpdGNoZWQgb24gKGlmIGF2YWlsYWJsZSkuIFN1cHBvcnRlZCBvbiBBbmRyb2lkIG9ubHkuXG4gICAqL1xuICB0b3JjaE9uPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogU2F2ZSBzY2FuIGhpc3RvcnkuIERlZmF1bHRzIHRvIGBmYWxzZWAuIFN1cHBvcnRlZCBvbiBBbmRyb2lkIG9ubHkuXG4gICAqL1xuICBzYXZlSGlzdG9yeT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERpc3BsYXkgc2Nhbm5lZCB0ZXh0IGZvciBYIG1zLiAwIHN1cHByZXNzZXMgaXQgZW50aXJlbHksIGRlZmF1bHQgMTUwMC4gU3VwcG9ydGVkIG9uIEFuZHJvaWQgb25seS5cbiAgICovXG4gIHJlc3VsdERpc3BsYXlEdXJhdGlvbj86IG51bWJlcjtcblxuICAvKipcbiAgICogTG9uZyBrZXkgZm9yIER5bmFtc29mdCBCYXJjb2RlIFJlYWRlclxuICAgKi9cbiAgZHluYW1zb2Z0bGljZW5zZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCYXJjb2RlU2NhblJlc3VsdCB7XG4gIGZvcm1hdDogc3RyaW5nO1xuICBjYW5jZWxsZWQ6IGJvb2xlYW47XG4gIHRleHQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBkeW5hbXNvZnQtYmFyY29kZS1zY2FubmVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBCYXJjb2RlIFNjYW5uZXIgUGx1Z2luIG9wZW5zIGEgY2FtZXJhIHZpZXcgYW5kIGF1dG9tYXRpY2FsbHkgc2NhbnMgYSBiYXJjb2RlLCByZXR1cm5pbmcgdGhlIGRhdGEgYmFjayB0byB5b3UuXG4gKiBSZXF1aXJlcyB0aGlzIENvcmRvdmEgcGx1Z2luOiBbQmFyY29kZVNjYW5uZXIgcGx1Z2luXShodHRwczovL2dpdGh1Yi5jb20vRHluYW1zb2Z0L2NvcmRvdmEtcGx1Z2luLWRici8pLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBCYXJjb2RlU2Nhbm5lciB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9keW5hbXNvZnQtYmFyY29kZS1zY2FubmVyJztcbiAqXG4gKiAuLi5cbiAqXG4gKiBjb25zdCByZXN1bHRzID0gYXdhaXQgQmFyY29kZVNjYW5uZXIuc2Nhbih7XCJkeW5hbXNvZnRsaWNlbnNlXCI6XCJsaWNlbnNlXCJ9KTtcbiAqIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEJhcmNvZGVTY2FubmVyT3B0aW9uc1xuICogQmFyY29kZVNjYW5SZXN1bHRcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdkeW5hbXNvZnQtYmFyY29kZS1zY2FubmVyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGJyJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLmJhcmNvZGVTY2FubmVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9EeW5hbXNvZnQvY29yZG92YS1wbHVnaW4tZGJyJyxcbiAgaW5zdGFsbDogJycsXG4gIGluc3RhbGxWYXJpYWJsZXM6IFtdLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmFyY29kZVNjYW5uZXIgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBPcGVuIHRoZSBiYXJjb2RlIHNjYW5uZXIuXG4gICAqXG4gICAqIEBwYXJhbSB7QmFyY29kZVNjYW5uZXJPcHRpb25zfSBbb3B0aW9uc10gT3B0aW9uYWwgb3B0aW9ucyB0byBwYXNzIHRvIHRoZSBzY2FubmVyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBzY2FubmVyIGRhdGEsIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvci5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScsXG4gIH0pXG4gIHNjYW4ob3B0aW9ucz86IEJhcmNvZGVTY2FubmVyT3B0aW9ucyk6IFByb21pc2U8QmFyY29kZVNjYW5SZXN1bHQ+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==